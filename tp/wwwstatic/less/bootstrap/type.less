//
// Typography
// --------------------------------------------------


// Body text
// -------------------------

p {
  margin: 0 0 @em*( @baseLineHeight / 2 )/@baseFontSize;
}
.lead {
  margin-bottom: @em*( @baseLineHeight )/@leadFontSize;
  font-size: @leadFontSize;
  font-weight: 200;
  line-height: @em*( @baseLineHeight * 1.5 )/@leadFontSize;
}


// Emphasis & misc
// -------------------------

small {
  font-size: 85%; // Ex: 14px base font * 85% = about 12px
}
strong {
  font-weight: bold;
}
em {
  font-style: italic;
}
cite {
  font-style: normal;
}

// Utility classes
.muted {
  color: @grayLight;
}
.text-warning { color: @warningText; }
a.text-warning:hover { color: darken(@warningText, 10%); }

.text-error { color: @errorText; }
a.text-error:hover { color: darken(@errorText, 10%); }

.text-info { color: @infoText; }
a.text-info:hover { color: darken(@infoText, 10%); }

.text-success { color: @successText; }
a.text-success:hover { color: darken(@successText, 10%); }


// Headings
// -------------------------

h1, h2, h3, h4, h5, h6 {
  margin: @em*(@baseLineHeight / 2)/@baseFontSize 0; // EM: Need specific margins per H#, since font size changes
  font-family: @headingsFontFamily;
  font-weight: @headingsFontWeight;
  line-height: @baseLineHeight;
  color: @headingsColor;
  text-rendering: optimizelegibility; // Fix the character spacing for headings
  small {
    font-weight: normal;
    line-height: 1;
    color: @grayLight;
  }
}

h1 { line-height: @em*( @h1LineHeight )/@h1FontSize; }
h2 { line-height: @em*( @h2LineHeight )/@h2FontSize; }
h3 { line-height: @em*( @h3LineHeight )/@h3FontSize; }
h4 { line-height: @em*( @h4LineHeight )/@h4FontSize; }
h5 { line-height: @em*( @h5LineHeight )/@h5FontSize; }
h6 { line-height: @em*( @h6LineHeight )/@h6FontSize; }

h1 { font-size: @h1FontSize; } // ~38px
h2 { font-size: @h2FontSize; } // ~32px
h3 { font-size: @h3FontSize; } // ~24px
h4 { font-size: @h4FontSize; } // ~18px
h5 { font-size: @h5FontSize; }
h6 { font-size: @h6FontSize; } // ~12px

h1 small { font-size: @h1SmallFontSize; }
h2 small { font-size: @h2SmallFontSize; }
h3 small { font-size: @h3SmallFontSize; }
h4 small { font-size: @h4SmallFontSize; }

// EM Based H# Small Line-Height
h1 small { line-height: @em*( @h1LineHeight )/@h1SmallFontSize; }
h2 small { line-height: @em*( @h2LineHeight )/@h2SmallFontSize; }
h3 small { line-height: @em*( @h3LineHeight )/@h3SmallFontSize; }
h4 small { line-height: @em*( @h4LineHeight )/@h4SmallFontSize; }

// EM Based H# Margins
@hMargin: @baseLineHeight / 2;
h1 { margin: @em*( @hMargin )/@h1FontSize 0; }
h2 { margin: @em*( @hMargin )/@h2FontSize 0; }
h3 { margin: @em*( @hMargin )/@h3FontSize 0; }
h4 { margin: @em*( @hMargin )/@h4FontSize 0; }
h5 { margin: @em*( @hMargin )/@h5FontSize 0; }
h6 { margin: @em*( @hMargin )/@h6FontSize 0; }

h1 small { margin: @em*( @hMargin )/@h1SmallFontSize 0; }
h2 small { margin: @em*( @hMargin )/@h2SmallFontSize 0; }
h3 small { margin: @em*( @hMargin )/@h3SmallFontSize 0; }
h4 small { margin: @em*( @hMargin )/@h4SmallFontSize 0; }


// Page header
// -------------------------

.page-header {
  padding-bottom: @em*((@baseLineHeight / 2) - 1)/@baseFontSize;
  margin: @em*( @baseLineHeight )/@baseFontSize 0 @em*(@baseLineHeight * 1.5)/@baseFontSize;
  border-bottom: @em*( 1px )/@baseFontSize solid @grayLighter;
}



// Lists
// --------------------------------------------------

// Unordered and Ordered lists
ul, ol {
  padding: 0;
  margin: 0 0 @em*( @baseLineHeight / 2 )/@baseFontSize @em*( 25px )/@baseFontSize;
}
ul ul,
ul ol,
ol ol,
ol ul {
  margin-bottom: 0;
}
li {
  line-height: @em*( @baseLineHeight )/@baseFontSize;
}
ul.unstyled,
ol.unstyled {
  margin-left: 0;
  list-style: none;
}

// Description Lists
dl {
  margin-bottom: @em*( @baseLineHeight )/@baseFontSize;
}
dt,
dd {
  line-height: @em*( @baseLineHeight )/@baseFontSize;
}
dt {
  font-weight: bold;
}
dd {
  margin-left: @em*( @baseLineHeight / 2 )/@baseFontSize;
}
// Horizontal layout (like forms)
.dl-horizontal {
  .clearfix(); // Ensure dl clears floats if empty dd elements present
  dt {
    float: left;
    width: @em*( @horizontalComponentOffset - 20 )/@baseFontSize;
    clear: left;
    text-align: right;
    .text-overflow();
  }
  dd {
    margin-left: @em*( @horizontalComponentOffset )/@baseFontSize;
  }
}

// MISC
// ----

// Horizontal rules
hr {
  margin: @em*( @baseLineHeight )/@baseFontSize 0;
  border: 0;
  border-top: @em*( 1px )/@baseFontSize solid @hrBorder;
  border-bottom: @em*( 1px )/@baseFontSize solid @white;
}

// Abbreviations and acronyms
abbr[title],
// Added data-* attribute to help out our tooltip plugin, per https://github.com/twitter/bootstrap/issues/5257
abbr[data-original-title] {
  cursor: help;
  border-bottom: @em*( 1px )/@baseFontSize dotted @grayLight;
}
abbr.initialism {
  font-size: 90%;
  text-transform: uppercase;
}

// Blockquotes
blockquote {
  padding: 0 0 0 @em*( 15px )/@baseFontSize;
  margin: 0 0 @em*( @baseLineHeight )/@baseFontSize;
  border-left: @em*( 5px )/@baseFontSize solid @grayLighter;
  p {
    margin-bottom: 0;
    #font > .shorthand(@blockquotePFontSize,300,@em*( @baseLineHeight * 1.25 )/@blockquotePFontSize);
  }
  small {
    display: block;
    line-height: @em*( @baseLineHeight )/@baseFontSize;
    color: @grayLight;
    &:before {
      content: '\2014 \00A0';
    }
  }

  // Float right with text-align: right
  &.pull-right {
    float: right;
    padding-right: @em*( 15px )/@baseFontSize;
    padding-left: 0;
    border-right: @em*( 5px )/@baseFontSize solid @grayLighter;
    border-left: 0;
    p,
    small {
      text-align: right;
    }
    small {
      &:before {
        content: '';
      }
      &:after {
        content: '\00A0 \2014';
      }
    }
  }
}

// Quotes
q:before,
q:after,
blockquote:before,
blockquote:after {
  content: "";
}

// Addresses
address {
  display: block;
  margin-bottom: @em*( @baseLineHeight )/@baseFontSize;
  font-style: normal;
  line-height: @em*( @baseLineHeight )/@baseFontSize;
}
