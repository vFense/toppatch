.list {
    // All buttons must be mini!!
    @listItemFontSize: 12px;
    @listBorder: #E6E6E6;
    @listHeaderBackground: #F5F5F5;
    @listFooterBackground: #F5F5F5;
    @listLegendBackground: #FAFAFA;
    @listHighlight: @warningBackground;

    HEADER,
    FOOTER {
        padding: @em*(2px)/@baseFontSize 0.5em;
        line-height: @em*( @baseLineHeight - 1px )/@baseFontSize;
        border-top: @em*(1px)/@baseFontSize solid @listBorder;
        border-bottom: @em*(1px)/@baseFontSize solid @listBorder;
    }

    HEADER {
        background-color: @listHeaderBackground;

        &+ .items,
        &+ .legend {
            border-top: none;
        }
    }

    FOOTER {
        background-color: @listFooterBackground;
    }

    .legend {
        font-size: @listItemFontSize;
        background-color: @listLegendBackground;
        padding: @em*(2px)/@listItemFontSize 0.5em;
        line-height: @em*( @baseLineHeight - 1px )/@listItemFontSize;
        border-top: @em*(1px)/@listItemFontSize solid @listBorder;
        border-bottom: @em*(1px)/@listItemFontSize solid @listBorder;
    }

    .items,
    .legend {
        &+ FOOTER {
            border-top: none;
        }
    }

    FORM {
        margin-bottom: 0;
    }

    &.row-fluid,
    .row-fluid {
        .box-sizing(border-box);
        [class*="span"] {
            min-height: 1em;
        }
    }

    .items {
        .item {
            font-size: @listItemFontSize;

            border-top: @em*(1px)/@listItemFontSize solid @listBorder;
            padding: @em*(2px)/@listItemFontSize 0.5em;

            &:first-child {
                border-top: none !important;
            }

            &:last-child {
                border-bottom: @em*(1px)/@listItemFontSize solid @listBorder;
            }

            &:hover {
                background-color: @listHighlight;
            }

            &.linked {
                padding: 0 0;
                A {
                    color: #000;
                    display: block;
                    text-decoration: none;
                    padding: @em*(2px)/@listItemFontSize 0.5em;

                    STRONG {
                        color: @linkColor;
                    }
                }
            }

            .desc {
                .text-overflow();
            }

            .btn-link {
                border: 0;
                border: none;
                line-height: @em*( 18px )/@btnFontSize;
                height: @em*( 18px )/@btnFontSize;
            }

            // Changing input fontsize,
            // Need to redo all em based rules from bootstrap
            input {
                &[type="text"],
                &[type="password"] {
                    @inputSize: 12px;
                    margin: 0;

                    height: @em*( 18px )/@inputSize;
                    padding: 0 @em*( 6px )/@inputSize;
                    font-size: @inputSize;
                    line-height: @em*( 14px )/@inputSize;
                    .border-radius(@em*( @inputBorderRadius )/@inputSize);

                    background-color: @inputBackground;
                    border: @em*( 1px )/@inputSize solid @inputBorder;
                    .box-shadow(inset 0 @em*( 1px )/@inputSize @em*( 1px )/@inputSize rgba(0,0,0,.075));
                    .transition(~"border linear .2s, box-shadow linear .2s");

                    // Focus state
                    &:focus {
                        .box-shadow(inset 0 @em*( 1px )/@inputSize @em*( 1px )/@inputSize rgba(0,0,0,.075), 0 0 @em*( 8px )/@inputSize rgba(82,168,236,.6));
                    }
                }
            }
        }
    }

    HEADER,
    FOOTER {
        @baseFontSize: 14px;
        // Changing input fontsize,
        // Need to redo all em based rules from bootstrap
        input {
            &[type="text"],
            &[type="password"] {
                margin: 0;

                height: @em*( 21px )/@baseFontSize;
                padding: 0 @em*( 6px )/@baseFontSize;
                font-size: @baseFontSize;
                line-height: @em*( 14px )/@baseFontSize;
                //.border-radius(@em*( @inputBorderRadius )/@baseFontSize);

                background-color: @inputBackground;
                border: @em*( 1px )/@baseFontSize solid @inputBorder;
                .box-shadow(inset 0 @em*( 1px )/@baseFontSize @em*( 1px )/@baseFontSize rgba(0,0,0,.075));
                .transition(~"border linear .2s, box-shadow linear .2s");

            // Focus state
                &:focus {
                    .box-shadow(inset 0 @em*( 1px )/@baseFontSize @em*( 1px )/@baseFontSize rgba(0,0,0,.075), 0 0 @em*( 8px )/@baseFontSize rgba(82,168,236,.6));
                }
            }
        }

        .input-prepend {
            margin-bottom: 0;
        }

        .add-on {
            height: @em*( 21px )/@baseFontSize;
            min-width: @em*( 16px )/@baseFontSize;
            padding: 0 @em*( 5px )/@baseFontSize;
            font-size: @baseFontSize;
            line-height: @em*( @baseLineHeight )/@baseFontSize;
            text-shadow: 0 @em*( 1px )/@baseFontSize 0 @white;
            border: @em*( 1px )/@baseFontSize solid #ccc;
        }


        .input-prepend {
            .add-on,
            .btn {
                margin-right: @em*( -1px )/@baseFontSize;
            }
            .add-on:first-child,
            .btn:first-child {
                .border-radius(@em*( @inputBorderRadius )/@baseFontSize 0 0 @em*( @inputBorderRadius )/@baseFontSize);
            }
        }
        .input-append {
            input,
            select,
            .uneditable-input {
                .border-left-radius(@em*( @inputBorderRadius )/@baseFontSize 0 0 @em*( @inputBorderRadius )/@baseFontSize);
            }
            .add-on,
            .btn {
                margin-left: @em*( -1px )/@baseFontSize;
            }
            .add-on:last-child,
            .btn:last-child {
                .border-radius(0 @em*( @inputBorderRadius )/@baseFontSize @em*( @inputBorderRadius )/@baseFontSize 0);
            }
        }

        .input-prepend.input-append {
            .add-on:first-child,
            .btn:first-child {
                margin-right: @em*( -1px )/@baseFontSize;
                .border-radius(@em*( @inputBorderRadius )/@baseFontSize 0 0 @em*( @inputBorderRadius )/@baseFontSize);
            }
            .add-on:last-child,
            .btn:last-child {
                margin-left: @em*( -1px )/@baseFontSize;
                .border-radius(0 @em*( @inputBorderRadius )/@baseFontSize @em*( @inputBorderRadius )/@baseFontSize 0);
            }
        }
    }

    .checkbox.inline {
        padding-top: 0;
    }

    .done { color: @successText; }
    .pend { color: @infoText; }
    .need { color: @warningText; }
    .fail { color: @errorText; }
}

.multipatch {
    @masterSlaveBorder: #B0B0B0;
    @slaveBackground: #f2f3f5;
    @selectedColor: #2F7AD8;
    .list {
        &.master,
        &.slave {
            .box-sizing(border-box);

            height: 480px;
            //overflow: hidden;
            border: @em*(1px)/@baseFontSize solid @masterSlaveBorder;
        }

        &.master {
            overflow-y: scroll; // Bandage
            .items {
                .item {
                    cursor: pointer !important;

                    &.first {
                        background-color: @selectedColor !important;
                        color: white !important;
                    }
                }
            }
        }

        &.slave {
            overflow-y: scroll;
        }
    }
}